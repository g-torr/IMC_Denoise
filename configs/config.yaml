
root_data_folder:  '../../' # it is the relative or absolute path to the folder that contains 'input_data_split'. If relative path is used, it refers to the folder from where the script main.py is run
input_data_split: 'split_channels_nohpf' #folder where tiff are split channel by channel
input_data_combined: 'combined_tiff' #folder containing a multichannel tiff per fov TODO make IMC denoise load the combined tiff files
# IMC denoise parameters
IMC_Denoise:

  retrain: True #force retrain of the model
  weights_folder: 'trained_weights' # subfolder of Save_directory where 'weights_name' and 'loss_name' saved.
  Save_directory : '../IMC_Denoise_intermediate_files/' #Folder where the training weights will be saved. If None, it will be saved in the default folder.
  output_directory : '../../Img_Denoised/non_preprocessed'
  channels_to_exclude : 'Carboplatin' #separate channels to be excluded using a comma, e.g. 'channelA,channelB'
  params:
    n_neighbours : 10 # Larger n enables removing more consecutive hot pixels. 
    n_iter : 3 # Iteration number for DIMR
    window_size : 5
  
    # ### DeepSNiF configuration and training
    # Define parameters for DeepSNiF training. If is_load_weights is True, the pre-trained model and pre-calculated range of the marker channel will be loaded. The range value is used for normalization in prediction.
    train_epoches : 5 # training epoches, which should be about 200 for a good training result. The default is 200.
    train_learning_rate : 0.0001 # inital learning rate. The default is 1e-3.
    train_batch_size : 128 # training batch size. For a GPU with smaller memory, it can be tuned smaller. The default is 128.
    pixel_mask_percent : 0.2 # percentage of the masked pixels in each patch. The default is 0.2.
    val_set_percent : 0.15 # percentage of validation set. The default is 0.15.
    loss_function : "I_divergence" # loss function used. The default is "I_divergence".
    weights_name : True # trained network weights name. If None, the weights will not be saved.
    loss_name : None # training and validation losses name, either .mat or .npz format. If not defined, the losses will not be saved.
    is_load_weights : False # Use the trained model directly. Will not read from any saved ones.
    lambda_HF : 3e-6 # HF regularization parameter.
    GPU: False # whether to use GPU. True or False
    network_size : 'small' # normal or small network to be used?
    batch_size : 5 # batch size in prediction
    #End configuration, do stuff
